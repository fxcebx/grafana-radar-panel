{"version":3,"sources":["../src/radargraph_ctrl.js"],"names":["MetricsPanelCtrl","moment","_","TimeSeries","panelDefaults","bgColor","radarSettings","fontColor","gridColor","fontSize","legendType","ignoreTimeInfluxDB","limitAspectRatio","aspectRatio","seriesAlias","scaleMin","scaleMax","scaleStep","animationDurationMs","RadarGraphCtrl","$scope","$injector","$rootScope","defaultsDeep","panel","events","on","onInitEditMode","bind","onPanelTeardown","render","onRender","onDataReceived","onDataError","percentPerLight","data","canvasid","Math","random","replace","ctx","radar","currentOptions","updateRadar","series","options","legend","display","position","labels","scale","angleLines","lineWidth","color","gridLines","pointLabels","parseInt","ticks","min","Number","max","stepSize","animation","duration","JSON","stringify","document","getElementById","getContext","Chart","type","console","log","destroy","$","remove","append","update","fulldata","datasets","ignoretimeinfluxdn","i","rows","length","serie","text","j","finaldatasets","finallabels","key","push","newdata","key2","label","backgroundColor","addTransparency","colors","borderColor","finaldata","finallabelsht","datasetstemp","hasOwnProperty","target","refId","datapoints","lastpoint","seriesAliasTable","split","seriesAliasHT","alias","count","ds","ds2","points","ind","dataset","decodeHistoricalDataSQL","curkey","props","slice","dataList","newseries","decodeNonHistoricalData","decodeHistoricalData","seriesData","addEditorTab","$timeout","cancel","nextTickPromise","col","transp","num","r","g","b","scope","elem","$panelContainer","find","css","templateUrl"],"mappings":"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","file":"radargraph_ctrl.js","sourcesContent":["import {\n  MetricsPanelCtrl\n} from 'app/plugins/sdk';\nimport moment from 'moment';\nimport _ from 'lodash';\nimport TimeSeries from 'app/core/time_series';\n\nimport './css/radargraph-panel.css!';\nimport './Chart.js'\n\nconst panelDefaults = {\n  bgColor: null,\n\n  radarSettings: {\n    fontColor: 'gray',\n    gridColor: 'gray',\n    fontSize: 14,\n    legendType: 'right',\n    ignoreTimeInfluxDB: false,\n    limitAspectRatio: true,\n    aspectRatio: 2.2,\n    seriesAlias:'',\n\tscaleMin: 0,\n\tscaleMax: 0,\n\tscaleStep: 0,\n\tanimationDurationMs: 0\n  }\n};\n\nexport class RadarGraphCtrl extends MetricsPanelCtrl {\n  constructor($scope, $injector, $rootScope) {\n    super($scope, $injector);\n    _.defaultsDeep(this.panel, panelDefaults);\n\n    this.$rootScope = $rootScope;\n\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('panel-teardown', this.onPanelTeardown.bind(this));\n    this.events.on('panel-initialized', this.render.bind(this));\n\n    this.events.on('render', this.onRender.bind(this));\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n\n    this.percentPerLight = 100;\n\n    this.data = [];\n    this.canvasid = (\"id\" + (Math.random() * 100000)).replace('.', '')\n\n    this.ctx = null;\n    this.radar = null;\n\n    this.currentOptions = null;\n\n    this.updateRadar();\n  }\n\n  onDataError() {\n    this.series = [];\n    this.render();\n  }\n\n  onRender() {\n    this.options = {\n      legend: {\n        display: true,\n        position: this.panel.radarSettings.legendType,\n        labels: {\n          fontColor: this.panel.radarSettings.fontColor\n        }\n      },\n      scale: {\n        angleLines: {\n          lineWidth: 2,\n          color: this.panel.radarSettings.gridColor\n        },\n        gridLines: {\n          lineWidth: 1,\n          color: this.panel.radarSettings.gridColor\n        },\n        pointLabels: {\n          fontSize: parseInt(this.panel.radarSettings.fontSize),\n          fontColor: this.panel.radarSettings.fontColor\n        },\n\t\tticks: {\n\t\t\tmin: Number(this.panel.radarSettings.scaleMin),\n\t\t\tmax: Number(this.panel.radarSettings.scaleMax),\n\t\t\tstepSize: Number(this.panel.radarSettings.scaleStep)\n\t\t},\n\t\tanimation: {\n\t\t\tduration: Number(this.panel.radarSettings.animationDurationMs)\n\t\t}\n\t\t\n      }\n    };\n\n    if (this.currentOptions == null)\n      this.currentOptions = JSON.stringify(this.options);\n\n\n    if (this.ctx == null)\n      if (document.getElementById(this.canvasid) != null)\n        this.ctx = document.getElementById(this.canvasid).getContext('2d');\n\n    if (this.ctx != null) {\n      if (this.radar == null) {\n        this.radar = new Chart(this.ctx, {\n          type: 'radar',\n          data: this.data,\n          options: this.options\n\n        });\n      } else {\n        if (this.currentOptions != JSON.stringify(this.options)) {\n          console.log(\"Recreate radar graph.\");\n          this.currentOptions = JSON.stringify(this.options);\n          if (this.ctx != null) {\n            if (this.radar != null) {\n              this.radar.destroy();\n              $(\"canvas#\" + this.canvasid).remove();\n              $(\"div#panel\" + this.canvasid).append('<canvas id=\"' + this.canvasid + '\"></canvas>');\n              this.ctx = document.getElementById(this.canvasid).getContext('2d');\n\n            }\n            this.radar = new Chart(this.ctx, {\n              type: 'radar',\n              data: this.data,\n              options: this.options\n\n            });\n          }\n        }\n        this.radar.data = this.data;\n        this.radar.update();\n      }\n    }\n  }\n\n  decodeNonHistoricalData(fulldata) {\n    var labels = {};\n    var datasets = {};\n\n    var ignoretimeinfluxdn = this.panel.radarSettings.ignoreTimeInfluxDB;\n\n    if (ignoretimeinfluxdn) {\n      //      console.log('IGNORING')\n      for (var i = 0; i < fulldata[0].rows.length; i++) {\n        if (!(fulldata[0].rows[i][1] in labels))\n          labels[fulldata[0].rows[i][1]] = true;\n\n        var serie = 'NA';\n\n        if (fulldata[0][\"columns\"].length > 2)\n          serie = fulldata[0][\"columns\"][2].text;\n        else\n          serie = fulldata[0][\"columns\"][0].text;\n\n        if (!(serie in datasets))\n          datasets[serie] = {};\n        datasets[serie][fulldata[0].rows[i][1]] = fulldata[0].rows[i][2]\n      }\n      for (var j = 1; j < fulldata.length; j++) {\n        for (var i = 0; i < fulldata[j].rows.length; i++) {\n          if (!(fulldata[j].rows[i][1] in labels))\n            labels[fulldata[j].rows[i][1]] = true;\n\n          var serie = 'NA';\n\n          if (fulldata[j][\"columns\"].length > 2)\n            serie = fulldata[j][\"columns\"][2].text;\n          else\n            serie = fulldata[j][\"columns\"][0].text;\n\n          if (!(serie in datasets))\n            datasets[serie] = {}\n          datasets[serie][fulldata[j].rows[i][1]] = fulldata[j].rows[i][2]\n        }\n      }\n      //      console.log(\"LABELS=\"+JSON.stringify(labels))\n    } else {\n      for (var i = 0; i < fulldata[0].rows.length; i++) {\n\n        if (fulldata[0].rows[i].length > 2) // more than 1 aggregation\n        {\n\n          if (!(fulldata[0].rows[i][0] in labels))\n            labels[fulldata[0].rows[i][0]] = true;\n          if (!(fulldata[0].rows[i][1] in datasets))\n            datasets[fulldata[0].rows[i][1]] = {};\n          datasets[fulldata[0].rows[i][1]][fulldata[0].rows[i][0]] = fulldata[0].rows[i][2];\n        } else {\n          if (!(fulldata[0].rows[i][0] in labels))\n            labels[fulldata[0].rows[i][0]] = true;\n\n          var serie = fulldata[0][\"columns\"][0].text;\n\n\n          if (!(serie in datasets))\n            datasets[serie] = {}\n          datasets[serie][fulldata[0].rows[i][0]] = fulldata[0].rows[i][1];\n        }\n      }\n    }\n\n    var finaldatasets = []\n    var finallabels = []\n\n    for (var key in labels)\n      finallabels.push(key);\n\n    var i = 0;\n\n    for (var key in datasets) {\n      \n      var newdata = [];\n      for (var key2 in labels)\n        if (key2 in datasets[key])\n          newdata.push(datasets[key][key2]);\n        else\n          newdata.push(0);\n\n      finaldatasets.push({\n        label: key,\n        data: newdata,\n        backgroundColor: this.addTransparency(this.$rootScope.colors[i], 0.2), //'rgba(54, 162, 235, 0.2)',\n        borderColor: this.$rootScope.colors[i] //'rgb(54, 162, 235)'\n      });\n      i++;\n    }\n\n    var finaldata = {\n      labels: finallabels,\n      datasets: finaldatasets\n    }\n    //alert(JSON.stringify(finaldata))\n    this.data = finaldata;\n  }\n\n  //***************************************************\n  // DECODE POSTGRESQL data source data\n  //***************************************************\n  decodeHistoricalDataSQL(fulldata) {\n    var finallabels = [];\n    var finallabelsht = {};\n    var datasets = [];\n    var datasetstemp = {};\n\n    for (var i = 0; i < fulldata.length; i++) {\n      if (!finallabelsht.hasOwnProperty(fulldata[i].target)) {\n        finallabelsht[fulldata[i].target] = fulldata[i].target;\n        finallabels.push(fulldata[i].target);\n      }\n      if (!datasetstemp.hasOwnProperty(fulldata[i].refId)) {\n        datasetstemp[fulldata[i].refId] = {};\n      }\n      if (fulldata[i].datapoints.length >= 1) {\n        var lastpoint = fulldata[i].datapoints[fulldata[i].datapoints.length - 1];\n        datasetstemp[fulldata[i].refId][fulldata[i].target] = lastpoint[0]\n      }\n    }\n\n    // loads alias\n    var seriesAliasTable=[];\n    if(this.panel.radarSettings.seriesAlias!=null)\n      seriesAliasTable=this.panel.radarSettings.seriesAlias.split(\";\");\n\n    var seriesAliasHT={}\n    \n    for (var j in seriesAliasTable)\n    {\n      var alias=seriesAliasTable[j].split('=');\n      if(alias.length>1)\n      {\n        seriesAliasHT[alias[0]]=alias[1]\n      }\n    }\n\n    var count=0;\n    for (var ds in datasetstemp) {\n      \n      var ds2=ds;\n      if(seriesAliasHT[ds]!=null)\n        ds2=seriesAliasHT[ds];\n\n      var points = [];\n      for (var ind in finallabels) {\n        i = finallabels[ind];\n        if (datasetstemp[ds].hasOwnProperty(i))\n          points.push(datasetstemp[ds][i]);\n        else\n          points.push(0);\n      }\n      var dataset = {}\n      dataset.label = ds2;\n      dataset.data = points;\n      dataset.backgroundColor= this.addTransparency(this.$rootScope.colors[count], 0.2); //'rgba(54, 162, 235, 0.2)',\n      dataset.borderColor= this.$rootScope.colors[count];\n\n      datasets.push(dataset);\n      count++;\n    }\n\n    var finaldata = {\n      labels: finallabels,\n      datasets: datasets\n    };\n    this.data = finaldata;\n  }\n\n  //***************************************************\n  // DECODE hsitorical data\n  //***************************************************\n  decodeHistoricalData(fulldata) {\n\n    if ((fulldata.length > 0) && (fulldata[0].target != null)) {\n      console.log(\"PSQL detected\");\n      return this.decodeHistoricalDataSQL(fulldata);\n    }\n    console.log(\"PSQL not detected\");\n    var labels = {};\n    var datasets = {};\n\n\n    for (var i = 0; i < fulldata.length; i++) {\n      var j = 0;\n      var curkey = '';\n      for (var key in fulldata[i].props) {\n        if (j == 0) {\n          labels[fulldata[i].props[key]] = true;\n          curkey = fulldata[i].props[key];\n        } else if (j == 1) {\n          if (!(fulldata[i].props[key] in datasets))\n            datasets[fulldata[i].props[key]] = {};\n          datasets[fulldata[i].props[key]][curkey] = (fulldata[i].datapoints.slice(-1))[0][0];\n        }\n        j = j + 1;\n      }\n    }\n    var finallabels = [];\n    var finaldatasets = [];\n\n    for (var key in labels)\n      finallabels.push(key);\n\n    var i = 0;\n\n    for (key in datasets) {\n      var newdata = [];\n      for (var key2 in labels)\n        if (key2 in datasets[key])\n          newdata.push(datasets[key][key2]);\n        else\n          newdata.push(0);\n\n      finaldatasets.push({\n        label: key,\n        data: newdata,\n        backgroundColor: this.addTransparency(this.$rootScope.colors[i], 0.2), //'rgba(54, 162, 235, 0.2)',\n        borderColor: this.$rootScope.colors[i] //'rgb(54, 162, 235)'\n      });\n      i++;\n    }\n\n    var finaldata = {\n      labels: finallabels,\n      datasets: finaldatasets\n    };\n    this.data = finaldata;\n  }\n\n  //***************************************************\n  // Data received\n  //***************************************************\n  onDataReceived(dataList) {\n    var newseries = [];\n    \n    this.data = {\n      labels: ['Running', 'Swimming', 'Eating', 'Cycling', 'Sleeping'],\n      datasets: [{\n          data: [Math.random() * 100, 10, 4, 2, 30],\n          label: 'serie 1',\n          backgroundColor: 'rgba(54, 162, 235, 0.2)',\n          borderColor: 'rgb(54, 162, 235)'\n        },\n        {\n          data: [10, 30, 14, 22, 3],\n          label: 'serie 2',\n          backgroundColor: 'rgba(235, 162, 54, 0.2)',\n          borderColor: 'rgb(235, 162, 54)'\n        }\n      ]\n    };\n\n    var fulldata = dataList;\n\n    if (fulldata.length >= 1 && (\"columnMap\" in fulldata[0])) {\n      this.decodeNonHistoricalData(fulldata);\n    } else {\n      this.decodeHistoricalData(fulldata);\n    }\n    this.render();\n  }\n\n  //***************************************************\n  // seriesHandler\n  //***************************************************\n  seriesHandler(seriesData) {\n    var series = new TimeSeries({\n      datapoints: seriesData.datapoints,\n      alias: seriesData.target\n    });\n    return series;\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', 'public/plugins/snuids-radar-panel/editor.html', 2);\n  }\n\n  onPanelTeardown() {\n    this.$timeout.cancel(this.nextTickPromise);\n  }\n\n  updateRadar() {\n    this.nextTickPromise = this.$timeout(this.updateRadar.bind(this), 1000);\n  }\n\n\n  addTransparency(col, transp) {\n    if (col[0] == \"#\") {\n      col = col.slice(1);\n    }\n\n    var num = parseInt(col, 16);\n\n    var r = (num >> 16);\n    var g = ((num >> 8) & 0x00FF);\n    var b = (num & 0x0000FF);\n\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + transp + ')';\n  }\n\n  link(scope, elem) {\n    this.events.on('render', () => {\n      const $panelContainer = elem.find('.panel-container');\n\n      if (this.panel.bgColor) {\n        $panelContainer.css('background-color', this.panel.bgColor);\n      } else {\n        $panelContainer.css('background-color', '');\n      }\n    });\n  }\n}\n\nRadarGraphCtrl.templateUrl = 'module.html';"]}